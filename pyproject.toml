[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "multimodal-agent-framework"
version = "0.1.10"
description = "A multi-modal agent framework with unified interfaces for different AI model providers"
readme = "README.md"
requires-python = ">=3.9,<3.13"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = ["ai", "agents", "multimodal", "openai", "claude", "azure"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "openai>=1.99.0",
    "anthropic>=0.67.0",
    "azure-ai-inference==1.0.0b7",
    "azure-core>=1.30.0",
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
    "retrying>=1.3.3",
    "typing-extensions>=4.8.0",
    # Conversation manager dependencies
    "pandas>=2.2.3",
    "boto3>=1.34.0",
    "pyarrow>=15.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=22.0",
    "flake8>=5.0",
    "mypy>=1.0",
]

[project.urls]
"Homepage" = "https://github.com/uditk2/multimodalagentframework"
"Bug Reports" = "https://github.com/uditk2/multimodalagentframework/issues"
"Source" = "https://github.com/uditk2/multimodalagentframework"

[tool.setuptools.packages.find]
exclude = ["tests*", "examples*", "venv*"]

[tool.setuptools.package-data]
multimodal_agent_framework = ["*.md"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

